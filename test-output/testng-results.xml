<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="17" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="124" started-at="2020-09-29T13:53:42Z" finished-at="2020-09-29T13:53:42Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="124" started-at="2020-09-29T13:53:42Z" finished-at="2020-09-29T13:53:42Z">
      <class name="Tests.TestVendingMachineProductSelection">
        <test-method status="PASS" signature="verifyUserCanCancelTransactionAndGetRefund()[pri:0, instance:Tests.TestVendingMachineProductSelection@5034c75a]" name="verifyUserCanCancelTransactionAndGetRefund" duration-ms="1" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanCancelTransactionAndGetRefund -->
        <test-method status="PASS" signature="verifyUserCantSelectInValidProduct()[pri:0, instance:Tests.TestVendingMachineProductSelection@5034c75a]" name="verifyUserCantSelectInValidProduct" duration-ms="7" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCantSelectInValidProduct -->
        <test-method status="PASS" signature="verifyUserCantSelectItemBecauseOfInsufficientBalance()[pri:0, instance:Tests.TestVendingMachineProductSelection@5034c75a]" name="verifyUserCantSelectItemBecauseOfInsufficientBalance" duration-ms="2" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCantSelectItemBecauseOfInsufficientBalance -->
        <test-method status="PASS" signature="verifyUserGotSelectedProduct()[pri:0, instance:Tests.TestVendingMachineProductSelection@5034c75a]" name="verifyUserGotSelectedProduct" duration-ms="2" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserGotSelectedProduct -->
        <test-method status="PASS" signature="verifyUserGotSelectedProductWithRemainingAmount()[pri:0, instance:Tests.TestVendingMachineProductSelection@5034c75a]" name="verifyUserGotSelectedProductWithRemainingAmount" duration-ms="0" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserGotSelectedProductWithRemainingAmount -->
      </class> <!-- Tests.TestVendingMachineProductSelection -->
      <class name="Tests.TestVendingMachineConsumerActions">
        <test-method status="PASS" signature="ValidateValidCoin10()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="ValidateValidCoin10" duration-ms="4" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateValidCoin10 -->
        <test-method status="PASS" signature="validateAllValidCoinsCanBeInsertedInVendingMachine()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="validateAllValidCoinsCanBeInsertedInVendingMachine" duration-ms="2" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllValidCoinsCanBeInsertedInVendingMachine -->
        <test-method status="PASS" signature="validateAndInsertCoinInVendingMachine()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="validateAndInsertCoinInVendingMachine" duration-ms="5" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAndInsertCoinInVendingMachine -->
        <test-method status="PASS" signature="validateInValidCoin0ThatShouldNotBeAccepted()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="validateInValidCoin0ThatShouldNotBeAccepted" duration-ms="2" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInValidCoin0ThatShouldNotBeAccepted -->
        <test-method status="PASS" signature="validateInValidCoinThatShouldNotBeAccepted()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="validateInValidCoinThatShouldNotBeAccepted" duration-ms="3" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInValidCoinThatShouldNotBeAccepted -->
        <test-method status="PASS" signature="validateMinusNumberThatShouldNotBeAccepted()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="validateMinusNumberThatShouldNotBeAccepted" duration-ms="3" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMinusNumberThatShouldNotBeAccepted -->
        <test-method status="PASS" signature="verifyCancelTransactionFunctionality()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="verifyCancelTransactionFunctionality" duration-ms="2" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelTransactionFunctionality -->
        <test-method status="PASS" signature="verifyTotalAmountOfInsertedCoins()[pri:0, instance:Tests.TestVendingMachineConsumerActions@51efea79]" name="verifyTotalAmountOfInsertedCoins" duration-ms="1" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTotalAmountOfInsertedCoins -->
      </class> <!-- Tests.TestVendingMachineConsumerActions -->
      <class name="Tests.TestVendingMachineAdminActions">
        <test-method status="PASS" signature="verifyAllValidProductsAvailableInProductsList()[pri:0, instance:Tests.TestVendingMachineAdminActions@2ef5e5e3]" name="verifyAllValidProductsAvailableInProductsList" duration-ms="13" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllValidProductsAvailableInProductsList -->
        <test-method status="PASS" signature="verifyPriceForAllProductsInProductList()[pri:0, instance:Tests.TestVendingMachineAdminActions@2ef5e5e3]" name="verifyPriceForAllProductsInProductList" duration-ms="3" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceForAllProductsInProductList -->
        <test-method status="PASS" signature="verifyQuantityOfProductAfterLoadingProductIntoInventory()[pri:0, instance:Tests.TestVendingMachineAdminActions@2ef5e5e3]" name="verifyQuantityOfProductAfterLoadingProductIntoInventory" duration-ms="1" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuantityOfProductAfterLoadingProductIntoInventory -->
        <test-method status="PASS" signature="verifyQuantityOfProductAfterRemovedProductFromInventory()[pri:0, instance:Tests.TestVendingMachineAdminActions@2ef5e5e3]" name="verifyQuantityOfProductAfterRemovedProductFromInventory" duration-ms="3" started-at="2020-09-29T14:53:42Z" finished-at="2020-09-29T14:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuantityOfProductAfterRemovedProductFromInventory -->
      </class> <!-- Tests.TestVendingMachineAdminActions -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
